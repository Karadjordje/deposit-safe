{"version":3,"sources":["components/Buttons.js","constants.js","App.js","serviceWorker.js","index.js"],"names":["Buttons","react_default","a","createElement","className","onClick","this","props","handleClick","value","Component","SEGMENTS","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","locked","segment","myinterface","idle","record","block","password","handleBtnClick","bind","assertThisInitialized","idleUser","runTimeout","fetchData","e","btnVal","target","newState","clearTimeout","timeout","setState","length","_this2","idleUserTimer","setTimeout","_this3","fetch_url","concat","fetch","method","cache","then","response","json","console","log","sn","catch","error","_this4","_this5","style","backgroundColor","type","readOnly","components_Buttons","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f2637042.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Buttons extends Component {\n\n\trender() {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<div className=\"screen__group\">\n\t\t\t\t\t<button onClick={this.props.handleClick} className=\"screen__btn\" value=\"7\">\n\t\t\t\t\t\t7\n\t\t\t\t\t</button>\n\t\t\t\t\t<button onClick={this.props.handleClick} className=\"screen__btn\" value=\"8\">\n\t\t\t\t\t\t8\n\t\t\t\t\t\t<span className=\"screen__icon\">\n\t\t\t\t\t\t\t<i className=\"fas fa-arrow-up\"></i>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button onClick={this.props.handleClick} className=\"screen__btn\" value=\"9\">\n\t\t\t\t\t\t9\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"screen__group\">\n\t\t\t\t\t<button onClick={this.props.handleClick} className=\"screen__btn\" value=\"4\">\n\t\t\t\t\t\t4\n\t\t\t\t\t\t<span className=\"screen__icon\">\n\t\t\t\t\t\t\t<i className=\"fas fa-arrow-left\"></i>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button onClick={this.props.handleClick} className=\"screen__btn\" value=\"5\">\n\t\t\t\t\t\t5\n\t\t\t\t\t</button>\n\t\t\t\t\t<button onClick={this.props.handleClick} className=\"screen__btn\" value=\"6\">\n\t\t\t\t\t\t6\n\t\t\t\t\t\t<span className=\"screen__icon\">\n\t\t\t\t\t\t\t<i className=\"fas fa-arrow-right\"></i>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"screen__group\">\n\t\t\t\t\t<button onClick={this.props.handleClick} className=\"screen__btn\" value=\"1\">\n\t\t\t\t\t\t1\n\t\t\t\t\t</button>\n\t\t\t\t\t<button onClick={this.props.handleClick} className=\"screen__btn\" value=\"2\">\n\t\t\t\t\t\t2\n\t\t\t\t\t\t<span className=\"screen__icon\">\n\t\t\t\t\t\t\t<i className=\"fas fa-arrow-down\"></i>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button onClick={this.props.handleClick} className=\"screen__btn\" value=\"3\">\n\t\t\t\t\t\t3\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"screen__group\">\n\t\t\t\t\t<button onClick={this.props.handleClick} className=\"screen__btn\" value=\"R\">\n\t\t\t\t\t\tR\n\t\t\t\t\t\t<span className=\"screen__icon\">\n\t\t\t\t\t\t\tB\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button onClick={this.props.handleClick} className=\"screen__btn\" value=\"0\">\n\t\t\t\t\t\t0\n\t\t\t\t\t</button>\n\t\t\t\t\t<button onClick={this.props.handleClick} className=\"screen__btn\" value=\"L\">\n\t\t\t\t\t\tL\n\t\t\t\t\t\t<span className=\"screen__icon\">\n\t\t\t\t\t\t\tA\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Buttons;\n","export const SEGMENTS = {\n\tBLANK: '',\n\tERROR: 'Error',\n\tRECORD: 'Record',\n\tREADY: 'Ready',\n\tLOCKING: 'Locking...',\n\tUNLOCKING: 'Unlocking...',\n\tSERVICE: 'Service',\n\tVALIDATING: 'Validating...',\n};\n\nexport const serialNum = 4815162342;\n\nexport const base_url = 'https://cors.io/?https://9w4qucosgf.execute-api.eu-central-1.amazonaws.com/default/CR-JS_team_M02a?';\n\n","import React, { Component } from 'react';\nimport './css/main.css';\nimport Buttons from './components/Buttons';\nimport {SEGMENTS, serialNum, base_url} from './constants.js';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tlocked: false,\n\t\t\tsegment: '',\n\t\t\tmyinterface: '',\n\t\t\tidle: false,\n\t\t\trecord: false,\n\t\t\tblock: false,\n\t\t\tpassword: null,\n\t\t};\n\n\t\tthis.handleBtnClick = this.handleBtnClick.bind(this);\n\t\tthis.idleUser = this.idleUser.bind(this);\n\t\tthis.runTimeout = this.runTimeout.bind(this);\n\t\tthis.fetchData = this.fetchData.bind(this);\n\t}\n\n\thandleBtnClick(e) {\n\t\tconst {\n\t\t\tlocked,\n\t\t} = this.state;\n\t\tlet btnVal = e.target.value;\n\n\t\tlet newState = {\n\t\t\tidle: false,\n\t\t};\n\n\t\tif (this.state.block) {\n\t\t\treturn;\n\t\t}\n\n\t\tclearTimeout(this.timeout);\n\n\t\tif (!locked) {\n\t\t\tif (btnVal === 'R') {\n\t\t\t\tthis.setState({\n\t\t\t\t\trecord: true,\n\t\t\t\t});\n\t\t\t\tnewState.segment = SEGMENTS.RECORD;\n\t\t\t\tnewState.myinterface = '';\n\t\t\t} else if (btnVal === 'L') {\n\t\t\t\tif (this.state.myinterface.length !== 4) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\trecord: false,\n\t\t\t\t\t});\n\t\t\t\t\tnewState.segment = SEGMENTS.ERROR;\n\t\t\t\t\tnewState.myinterface = '';\n\t\t\t\t} else if(this.state.record) {\n\t\t\t\t\tnewState.segment = SEGMENTS.LOCKING;\n\t\t\t\t\tnewState.block = true;\n\t\t\t\t\tnewState.password = this.state.myinterface;\n\t\t\t\t\tnewState.myinterface = '';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnewState.myinterface = this.state.myinterface + btnVal;\n\t\t\t}\n\t\t} else {\n\t\t\tnewState.myinterface = this.state.myinterface + btnVal;\n\t\t}\n\n\t\tthis.setState(newState, this.runTimeout);\n\t\tthis.idleUser();\n\t}\n\n\tidleUser() {\n\t\tclearTimeout(this.idleUserTimer);\n\t\tthis.idleUserTimer = setTimeout(() => {\n\t\t\tthis.setState({ idle: true });\n\t\t}, 5000);\n\t}\n\n\tfetchData() {\n\t\t// Change message to validation while waiting for response\n\t\tthis.setState({\n\t\t\tsegment: SEGMENTS.VALIDATING,\n\t\t\tmyinterface: '',\n\t\t\tblock: true\n\t\t});\n\n\t\tlet fetch_url = `${base_url}code=${this.state.myinterface}`;\n\n\t\tconst myOptions = {\n\t\t\tmethod: 'GET',\n\t\t\tcache: 'default'\n\t\t};\n\n\t\tfetch(fetch_url, myOptions)\n\t\t\t.then(response => response.json())\n\t\t\t.then(response => {\n\t\t\t\tconsole.log('response', response);\n\t\t\t\tif (response.sn === serialNum) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tsegment: SEGMENTS.UNLOCKING,\n\t\t\t\t\t\tmyinterface: '',\n\t\t\t\t\t\tblock: true\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tsegment: SEGMENTS.ERROR,\n\t\t\t\t\t\tmyinterface: '',\n\t\t\t\t\t\tblock: false\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => { // If there is no internet for example\n\t\t\t\tconsole.log(error);\n\t\t\t\tthis.setState({\n\t\t\t\t\tsegment: SEGMENTS.ERROR,\n\t\t\t\t\tmyinterface: '',\n\t\t\t\t\tblock: false\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\trunTimeout() {\n\t\tclearTimeout(this.timeout);\n\t\tif (this.state.segment === SEGMENTS.LOCKING || this.state.segment === SEGMENTS.UNLOCKING) {\n\t\t\tthis.timeout = setTimeout(() => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tblock: false,\n\t\t\t\t\tsegment: SEGMENTS.BLANK,\n\t\t\t\t\tlocked: this.state.segment === SEGMENTS.LOCKING,\n\t\t\t\t});\n\t\t\t}, 3000);\n\t\t} else {\n\t\t\tthis.timeout = setTimeout(function(){\n\t\t\t\tif (this.state.locked) {\n\t\t\t\t\tif (this.state.segment === SEGMENTS.SERVICE) {\n\t\t\t\t\t\tif (this.state.myinterface !== '') {\n\t\t\t\t\t\t\tthis.fetchData();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else if (this.state.myinterface.length === 4) {\n\t\t\t\t\t\t// try to unlock\n\t\t\t\t\t\tif (this.state.myinterface === this.state.password) {\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tsegment: SEGMENTS.UNLOCKING,\n\t\t\t\t\t\t\t\tmyinterface: '',\n\t\t\t\t\t\t\t\tblock: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tsegment: SEGMENTS.ERROR,\n\t\t\t\t\t\t\t\tmyinterface: ''\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.runTimeout();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else if (this.state.myinterface === '000000') {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tsegment: SEGMENTS.SERVICE,\n\t\t\t\t\t\t\tmyinterface: ''\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.runTimeout();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.timeout = setTimeout(() => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tmyinterface: '',\n\t\t\t\t\t\tsegment: SEGMENTS.BLANK,\n\t\t\t\t\t});\n\t\t\t\t}, 500);\n\t\t\t}.bind(this), 500);\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.idleUser();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"panel\">\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"panel__screen\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: this.state.idle ? '#47b2b2' : '#7fffff'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"panel__status\">{this.state.locked ? 'Locked' : 'Unlocked'}</div>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"panel__value\"\n\t\t\t\t\t\tvalue={this.state.myinterface || this.state.segment}\n\t\t\t\t\t\treadOnly\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<Buttons handleClick={this.handleBtnClick} />\n\n\t\t\t\t<span className=\"panel__serial\">\n\t\t\t\t\tS/N: 4815162342\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}